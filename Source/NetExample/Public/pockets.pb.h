// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pockets.proto

#ifndef PROTOBUF_pockets_2eproto__INCLUDED
#define PROTOBUF_pockets_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace nl {
namespace network {
namespace generated {
class NLCharacter;
class NLCharacterDefaultTypeInternal;
extern NLCharacterDefaultTypeInternal _NLCharacter_default_instance_;
class NLCharacterSelect;
class NLCharacterSelectDefaultTypeInternal;
extern NLCharacterSelectDefaultTypeInternal _NLCharacterSelect_default_instance_;
class NLCreateCharacter;
class NLCreateCharacterDefaultTypeInternal;
extern NLCreateCharacterDefaultTypeInternal _NLCreateCharacter_default_instance_;
class NLFailed;
class NLFailedDefaultTypeInternal;
extern NLFailedDefaultTypeInternal _NLFailed_default_instance_;
class NLLevelReady;
class NLLevelReadyDefaultTypeInternal;
extern NLLevelReadyDefaultTypeInternal _NLLevelReady_default_instance_;
class NLLoadLevel;
class NLLoadLevelDefaultTypeInternal;
extern NLLoadLevelDefaultTypeInternal _NLLoadLevel_default_instance_;
class NLLogin;
class NLLoginDefaultTypeInternal;
extern NLLoginDefaultTypeInternal _NLLogin_default_instance_;
class NLPlayerInfo;
class NLPlayerInfoDefaultTypeInternal;
extern NLPlayerInfoDefaultTypeInternal _NLPlayerInfo_default_instance_;
class NetworkPocket;
class NetworkPocketDefaultTypeInternal;
extern NetworkPocketDefaultTypeInternal _NetworkPocket_default_instance_;
}  // namespace generated
}  // namespace network
}  // namespace nl
}  // namespace com

namespace com {
namespace nl {
namespace network {
namespace generated {

namespace protobuf_pockets_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pockets_2eproto

enum PocketType {
  LOGIN = 0,
  PLAYER_INFO = 1,
  CREATE_CHARACTER = 2,
  CHARACTER = 3,
  CHARACTER_SELECT = 4,
  LOAD_LEVEL = 5,
  LEVEL_READY = 6,
  FAILED = 666,
  PocketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PocketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PocketType_IsValid(int value);
const PocketType PocketType_MIN = LOGIN;
const PocketType PocketType_MAX = FAILED;
const int PocketType_ARRAYSIZE = PocketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PocketType_descriptor();
inline const ::std::string& PocketType_Name(PocketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PocketType_descriptor(), value);
}
inline bool PocketType_Parse(
    const ::std::string& name, PocketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PocketType>(
    PocketType_descriptor(), name, value);
}
enum CharacterType {
  WARRIOR = 0,
  PROEST = 1,
  CharacterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CharacterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CharacterType_IsValid(int value);
const CharacterType CharacterType_MIN = WARRIOR;
const CharacterType CharacterType_MAX = PROEST;
const int CharacterType_ARRAYSIZE = CharacterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CharacterType_descriptor();
inline const ::std::string& CharacterType_Name(CharacterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CharacterType_descriptor(), value);
}
inline bool CharacterType_Parse(
    const ::std::string& name, CharacterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CharacterType>(
    CharacterType_descriptor(), name, value);
}
// ===================================================================

class NetworkPocket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NetworkPocket) */ {
 public:
  NetworkPocket();
  virtual ~NetworkPocket();

  NetworkPocket(const NetworkPocket& from);

  inline NetworkPocket& operator=(const NetworkPocket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetworkPocket(NetworkPocket&& from) noexcept
    : NetworkPocket() {
    *this = ::std::move(from);
  }

  inline NetworkPocket& operator=(NetworkPocket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkPocket& default_instance();

  enum TestOneofCase {
    kLogin = 2,
    kPlayerInfo = 3,
    kCreateCharacter = 4,
    kCharacterSelect = 5,
    kLoadLevel = 6,
    kLevelReady = 7,
    kFailed = 666,
    TEST_ONEOF_NOT_SET = 0,
  };

  static inline const NetworkPocket* internal_default_instance() {
    return reinterpret_cast<const NetworkPocket*>(
               &_NetworkPocket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(NetworkPocket* other);
  friend void swap(NetworkPocket& a, NetworkPocket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetworkPocket* New() const PROTOBUF_FINAL { return New(NULL); }

  NetworkPocket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetworkPocket& from);
  void MergeFrom(const NetworkPocket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetworkPocket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.nl.network.generated.PocketType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::com::nl::network::generated::PocketType type() const;
  void set_type(::com::nl::network::generated::PocketType value);

  // .com.nl.network.generated.NLLogin login = 2;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 2;
  const ::com::nl::network::generated::NLLogin& login() const;
  ::com::nl::network::generated::NLLogin* mutable_login();
  ::com::nl::network::generated::NLLogin* release_login();
  void set_allocated_login(::com::nl::network::generated::NLLogin* login);

  // .com.nl.network.generated.NLPlayerInfo playerInfo = 3;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 3;
  const ::com::nl::network::generated::NLPlayerInfo& playerinfo() const;
  ::com::nl::network::generated::NLPlayerInfo* mutable_playerinfo();
  ::com::nl::network::generated::NLPlayerInfo* release_playerinfo();
  void set_allocated_playerinfo(::com::nl::network::generated::NLPlayerInfo* playerinfo);

  // .com.nl.network.generated.NLCreateCharacter createCharacter = 4;
  bool has_createcharacter() const;
  void clear_createcharacter();
  static const int kCreateCharacterFieldNumber = 4;
  const ::com::nl::network::generated::NLCreateCharacter& createcharacter() const;
  ::com::nl::network::generated::NLCreateCharacter* mutable_createcharacter();
  ::com::nl::network::generated::NLCreateCharacter* release_createcharacter();
  void set_allocated_createcharacter(::com::nl::network::generated::NLCreateCharacter* createcharacter);

  // .com.nl.network.generated.NLCharacterSelect characterSelect = 5;
  bool has_characterselect() const;
  void clear_characterselect();
  static const int kCharacterSelectFieldNumber = 5;
  const ::com::nl::network::generated::NLCharacterSelect& characterselect() const;
  ::com::nl::network::generated::NLCharacterSelect* mutable_characterselect();
  ::com::nl::network::generated::NLCharacterSelect* release_characterselect();
  void set_allocated_characterselect(::com::nl::network::generated::NLCharacterSelect* characterselect);

  // .com.nl.network.generated.NLLoadLevel loadLevel = 6;
  bool has_loadlevel() const;
  void clear_loadlevel();
  static const int kLoadLevelFieldNumber = 6;
  const ::com::nl::network::generated::NLLoadLevel& loadlevel() const;
  ::com::nl::network::generated::NLLoadLevel* mutable_loadlevel();
  ::com::nl::network::generated::NLLoadLevel* release_loadlevel();
  void set_allocated_loadlevel(::com::nl::network::generated::NLLoadLevel* loadlevel);

  // .com.nl.network.generated.NLLevelReady levelReady = 7;
  bool has_levelready() const;
  void clear_levelready();
  static const int kLevelReadyFieldNumber = 7;
  const ::com::nl::network::generated::NLLevelReady& levelready() const;
  ::com::nl::network::generated::NLLevelReady* mutable_levelready();
  ::com::nl::network::generated::NLLevelReady* release_levelready();
  void set_allocated_levelready(::com::nl::network::generated::NLLevelReady* levelready);

  // .com.nl.network.generated.NLFailed failed = 666;
  bool has_failed() const;
  void clear_failed();
  static const int kFailedFieldNumber = 666;
  const ::com::nl::network::generated::NLFailed& failed() const;
  ::com::nl::network::generated::NLFailed* mutable_failed();
  ::com::nl::network::generated::NLFailed* release_failed();
  void set_allocated_failed(::com::nl::network::generated::NLFailed* failed);

  TestOneofCase test_oneof_case() const;
  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NetworkPocket)
 private:
  void set_has_login();
  void set_has_playerinfo();
  void set_has_createcharacter();
  void set_has_characterselect();
  void set_has_loadlevel();
  void set_has_levelready();
  void set_has_failed();

  inline bool has_test_oneof() const;
  void clear_test_oneof();
  inline void clear_has_test_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  union TestOneofUnion {
    TestOneofUnion() {}
    ::com::nl::network::generated::NLLogin* login_;
    ::com::nl::network::generated::NLPlayerInfo* playerinfo_;
    ::com::nl::network::generated::NLCreateCharacter* createcharacter_;
    ::com::nl::network::generated::NLCharacterSelect* characterselect_;
    ::com::nl::network::generated::NLLoadLevel* loadlevel_;
    ::com::nl::network::generated::NLLevelReady* levelready_;
    ::com::nl::network::generated::NLFailed* failed_;
  } test_oneof_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLLogin) */ {
 public:
  NLLogin();
  virtual ~NLLogin();

  NLLogin(const NLLogin& from);

  inline NLLogin& operator=(const NLLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLLogin(NLLogin&& from) noexcept
    : NLLogin() {
    *this = ::std::move(from);
  }

  inline NLLogin& operator=(NLLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLLogin& default_instance();

  static inline const NLLogin* internal_default_instance() {
    return reinterpret_cast<const NLLogin*>(
               &_NLLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NLLogin* other);
  friend void swap(NLLogin& a, NLLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  NLLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLLogin& from);
  void MergeFrom(const NLLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string login = 1;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::std::string& login() const;
  void set_login(const ::std::string& value);
  #if LANG_CXX11
  void set_login(::std::string&& value);
  #endif
  void set_login(const char* value);
  void set_login(const char* value, size_t size);
  ::std::string* mutable_login();
  ::std::string* release_login();
  void set_allocated_login(::std::string* login);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr login_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLPlayerInfo) */ {
 public:
  NLPlayerInfo();
  virtual ~NLPlayerInfo();

  NLPlayerInfo(const NLPlayerInfo& from);

  inline NLPlayerInfo& operator=(const NLPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLPlayerInfo(NLPlayerInfo&& from) noexcept
    : NLPlayerInfo() {
    *this = ::std::move(from);
  }

  inline NLPlayerInfo& operator=(NLPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLPlayerInfo& default_instance();

  static inline const NLPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const NLPlayerInfo*>(
               &_NLPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(NLPlayerInfo* other);
  friend void swap(NLPlayerInfo& a, NLPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NLPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLPlayerInfo& from);
  void MergeFrom(const NLPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.nl.network.generated.NLCharacter charaters = 2;
  int charaters_size() const;
  void clear_charaters();
  static const int kCharatersFieldNumber = 2;
  const ::com::nl::network::generated::NLCharacter& charaters(int index) const;
  ::com::nl::network::generated::NLCharacter* mutable_charaters(int index);
  ::com::nl::network::generated::NLCharacter* add_charaters();
  ::google::protobuf::RepeatedPtrField< ::com::nl::network::generated::NLCharacter >*
      mutable_charaters();
  const ::google::protobuf::RepeatedPtrField< ::com::nl::network::generated::NLCharacter >&
      charaters() const;

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::nl::network::generated::NLCharacter > charaters_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLCreateCharacter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLCreateCharacter) */ {
 public:
  NLCreateCharacter();
  virtual ~NLCreateCharacter();

  NLCreateCharacter(const NLCreateCharacter& from);

  inline NLCreateCharacter& operator=(const NLCreateCharacter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLCreateCharacter(NLCreateCharacter&& from) noexcept
    : NLCreateCharacter() {
    *this = ::std::move(from);
  }

  inline NLCreateCharacter& operator=(NLCreateCharacter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLCreateCharacter& default_instance();

  static inline const NLCreateCharacter* internal_default_instance() {
    return reinterpret_cast<const NLCreateCharacter*>(
               &_NLCreateCharacter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(NLCreateCharacter* other);
  friend void swap(NLCreateCharacter& a, NLCreateCharacter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLCreateCharacter* New() const PROTOBUF_FINAL { return New(NULL); }

  NLCreateCharacter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLCreateCharacter& from);
  void MergeFrom(const NLCreateCharacter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLCreateCharacter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .com.nl.network.generated.CharacterType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::com::nl::network::generated::CharacterType type() const;
  void set_type(::com::nl::network::generated::CharacterType value);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLCreateCharacter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLCharacter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLCharacter) */ {
 public:
  NLCharacter();
  virtual ~NLCharacter();

  NLCharacter(const NLCharacter& from);

  inline NLCharacter& operator=(const NLCharacter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLCharacter(NLCharacter&& from) noexcept
    : NLCharacter() {
    *this = ::std::move(from);
  }

  inline NLCharacter& operator=(NLCharacter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLCharacter& default_instance();

  static inline const NLCharacter* internal_default_instance() {
    return reinterpret_cast<const NLCharacter*>(
               &_NLCharacter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(NLCharacter* other);
  friend void swap(NLCharacter& a, NLCharacter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLCharacter* New() const PROTOBUF_FINAL { return New(NULL); }

  NLCharacter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLCharacter& from);
  void MergeFrom(const NLCharacter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLCharacter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // .com.nl.network.generated.CharacterType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::com::nl::network::generated::CharacterType type() const;
  void set_type(::com::nl::network::generated::CharacterType value);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLCharacter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 level_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLCharacterSelect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLCharacterSelect) */ {
 public:
  NLCharacterSelect();
  virtual ~NLCharacterSelect();

  NLCharacterSelect(const NLCharacterSelect& from);

  inline NLCharacterSelect& operator=(const NLCharacterSelect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLCharacterSelect(NLCharacterSelect&& from) noexcept
    : NLCharacterSelect() {
    *this = ::std::move(from);
  }

  inline NLCharacterSelect& operator=(NLCharacterSelect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLCharacterSelect& default_instance();

  static inline const NLCharacterSelect* internal_default_instance() {
    return reinterpret_cast<const NLCharacterSelect*>(
               &_NLCharacterSelect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(NLCharacterSelect* other);
  friend void swap(NLCharacterSelect& a, NLCharacterSelect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLCharacterSelect* New() const PROTOBUF_FINAL { return New(NULL); }

  NLCharacterSelect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLCharacterSelect& from);
  void MergeFrom(const NLCharacterSelect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLCharacterSelect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLCharacterSelect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLLoadLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLLoadLevel) */ {
 public:
  NLLoadLevel();
  virtual ~NLLoadLevel();

  NLLoadLevel(const NLLoadLevel& from);

  inline NLLoadLevel& operator=(const NLLoadLevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLLoadLevel(NLLoadLevel&& from) noexcept
    : NLLoadLevel() {
    *this = ::std::move(from);
  }

  inline NLLoadLevel& operator=(NLLoadLevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLLoadLevel& default_instance();

  static inline const NLLoadLevel* internal_default_instance() {
    return reinterpret_cast<const NLLoadLevel*>(
               &_NLLoadLevel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(NLLoadLevel* other);
  friend void swap(NLLoadLevel& a, NLLoadLevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLLoadLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  NLLoadLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLLoadLevel& from);
  void MergeFrom(const NLLoadLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLLoadLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  const ::std::string& level() const;
  void set_level(const ::std::string& value);
  #if LANG_CXX11
  void set_level(::std::string&& value);
  #endif
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  ::std::string* mutable_level();
  ::std::string* release_level();
  void set_allocated_level(::std::string* level);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLLoadLevel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr level_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLLevelReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLLevelReady) */ {
 public:
  NLLevelReady();
  virtual ~NLLevelReady();

  NLLevelReady(const NLLevelReady& from);

  inline NLLevelReady& operator=(const NLLevelReady& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLLevelReady(NLLevelReady&& from) noexcept
    : NLLevelReady() {
    *this = ::std::move(from);
  }

  inline NLLevelReady& operator=(NLLevelReady&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLLevelReady& default_instance();

  static inline const NLLevelReady* internal_default_instance() {
    return reinterpret_cast<const NLLevelReady*>(
               &_NLLevelReady_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(NLLevelReady* other);
  friend void swap(NLLevelReady& a, NLLevelReady& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLLevelReady* New() const PROTOBUF_FINAL { return New(NULL); }

  NLLevelReady* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLLevelReady& from);
  void MergeFrom(const NLLevelReady& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLLevelReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLLevelReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NLFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nl.network.generated.NLFailed) */ {
 public:
  NLFailed();
  virtual ~NLFailed();

  NLFailed(const NLFailed& from);

  inline NLFailed& operator=(const NLFailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NLFailed(NLFailed&& from) noexcept
    : NLFailed() {
    *this = ::std::move(from);
  }

  inline NLFailed& operator=(NLFailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NLFailed& default_instance();

  static inline const NLFailed* internal_default_instance() {
    return reinterpret_cast<const NLFailed*>(
               &_NLFailed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(NLFailed* other);
  friend void swap(NLFailed& a, NLFailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NLFailed* New() const PROTOBUF_FINAL { return New(NULL); }

  NLFailed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NLFailed& from);
  void MergeFrom(const NLFailed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NLFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errorCode = 1;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  const ::std::string& errorcode() const;
  void set_errorcode(const ::std::string& value);
  #if LANG_CXX11
  void set_errorcode(::std::string&& value);
  #endif
  void set_errorcode(const char* value);
  void set_errorcode(const char* value, size_t size);
  ::std::string* mutable_errorcode();
  ::std::string* release_errorcode();
  void set_allocated_errorcode(::std::string* errorcode);

  // string errordesc = 2;
  void clear_errordesc();
  static const int kErrordescFieldNumber = 2;
  const ::std::string& errordesc() const;
  void set_errordesc(const ::std::string& value);
  #if LANG_CXX11
  void set_errordesc(::std::string&& value);
  #endif
  void set_errordesc(const char* value);
  void set_errordesc(const char* value, size_t size);
  ::std::string* mutable_errordesc();
  ::std::string* release_errordesc();
  void set_allocated_errordesc(::std::string* errordesc);

  // @@protoc_insertion_point(class_scope:com.nl.network.generated.NLFailed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errorcode_;
  ::google::protobuf::internal::ArenaStringPtr errordesc_;
  mutable int _cached_size_;
  friend struct protobuf_pockets_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetworkPocket

// .com.nl.network.generated.PocketType type = 1;
inline void NetworkPocket::clear_type() {
  type_ = 0;
}
inline ::com::nl::network::generated::PocketType NetworkPocket::type() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.type)
  return static_cast< ::com::nl::network::generated::PocketType >(type_);
}
inline void NetworkPocket::set_type(::com::nl::network::generated::PocketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NetworkPocket.type)
}

// .com.nl.network.generated.NLLogin login = 2;
inline bool NetworkPocket::has_login() const {
  return test_oneof_case() == kLogin;
}
inline void NetworkPocket::set_has_login() {
  _oneof_case_[0] = kLogin;
}
inline void NetworkPocket::clear_login() {
  if (has_login()) {
    delete test_oneof_.login_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLLogin& NetworkPocket::login() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.login)
  return has_login()
      ? *test_oneof_.login_
      : ::com::nl::network::generated::NLLogin::default_instance();
}
inline ::com::nl::network::generated::NLLogin* NetworkPocket::mutable_login() {
  if (!has_login()) {
    clear_test_oneof();
    set_has_login();
    test_oneof_.login_ = new ::com::nl::network::generated::NLLogin;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.login)
  return test_oneof_.login_;
}
inline ::com::nl::network::generated::NLLogin* NetworkPocket::release_login() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.login)
  if (has_login()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLLogin* temp = test_oneof_.login_;
    test_oneof_.login_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_login(::com::nl::network::generated::NLLogin* login) {
  clear_test_oneof();
  if (login) {
    set_has_login();
    test_oneof_.login_ = login;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.login)
}

// .com.nl.network.generated.NLPlayerInfo playerInfo = 3;
inline bool NetworkPocket::has_playerinfo() const {
  return test_oneof_case() == kPlayerInfo;
}
inline void NetworkPocket::set_has_playerinfo() {
  _oneof_case_[0] = kPlayerInfo;
}
inline void NetworkPocket::clear_playerinfo() {
  if (has_playerinfo()) {
    delete test_oneof_.playerinfo_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLPlayerInfo& NetworkPocket::playerinfo() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.playerInfo)
  return has_playerinfo()
      ? *test_oneof_.playerinfo_
      : ::com::nl::network::generated::NLPlayerInfo::default_instance();
}
inline ::com::nl::network::generated::NLPlayerInfo* NetworkPocket::mutable_playerinfo() {
  if (!has_playerinfo()) {
    clear_test_oneof();
    set_has_playerinfo();
    test_oneof_.playerinfo_ = new ::com::nl::network::generated::NLPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.playerInfo)
  return test_oneof_.playerinfo_;
}
inline ::com::nl::network::generated::NLPlayerInfo* NetworkPocket::release_playerinfo() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.playerInfo)
  if (has_playerinfo()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLPlayerInfo* temp = test_oneof_.playerinfo_;
    test_oneof_.playerinfo_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_playerinfo(::com::nl::network::generated::NLPlayerInfo* playerinfo) {
  clear_test_oneof();
  if (playerinfo) {
    set_has_playerinfo();
    test_oneof_.playerinfo_ = playerinfo;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.playerInfo)
}

// .com.nl.network.generated.NLCreateCharacter createCharacter = 4;
inline bool NetworkPocket::has_createcharacter() const {
  return test_oneof_case() == kCreateCharacter;
}
inline void NetworkPocket::set_has_createcharacter() {
  _oneof_case_[0] = kCreateCharacter;
}
inline void NetworkPocket::clear_createcharacter() {
  if (has_createcharacter()) {
    delete test_oneof_.createcharacter_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLCreateCharacter& NetworkPocket::createcharacter() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.createCharacter)
  return has_createcharacter()
      ? *test_oneof_.createcharacter_
      : ::com::nl::network::generated::NLCreateCharacter::default_instance();
}
inline ::com::nl::network::generated::NLCreateCharacter* NetworkPocket::mutable_createcharacter() {
  if (!has_createcharacter()) {
    clear_test_oneof();
    set_has_createcharacter();
    test_oneof_.createcharacter_ = new ::com::nl::network::generated::NLCreateCharacter;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.createCharacter)
  return test_oneof_.createcharacter_;
}
inline ::com::nl::network::generated::NLCreateCharacter* NetworkPocket::release_createcharacter() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.createCharacter)
  if (has_createcharacter()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLCreateCharacter* temp = test_oneof_.createcharacter_;
    test_oneof_.createcharacter_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_createcharacter(::com::nl::network::generated::NLCreateCharacter* createcharacter) {
  clear_test_oneof();
  if (createcharacter) {
    set_has_createcharacter();
    test_oneof_.createcharacter_ = createcharacter;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.createCharacter)
}

// .com.nl.network.generated.NLCharacterSelect characterSelect = 5;
inline bool NetworkPocket::has_characterselect() const {
  return test_oneof_case() == kCharacterSelect;
}
inline void NetworkPocket::set_has_characterselect() {
  _oneof_case_[0] = kCharacterSelect;
}
inline void NetworkPocket::clear_characterselect() {
  if (has_characterselect()) {
    delete test_oneof_.characterselect_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLCharacterSelect& NetworkPocket::characterselect() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.characterSelect)
  return has_characterselect()
      ? *test_oneof_.characterselect_
      : ::com::nl::network::generated::NLCharacterSelect::default_instance();
}
inline ::com::nl::network::generated::NLCharacterSelect* NetworkPocket::mutable_characterselect() {
  if (!has_characterselect()) {
    clear_test_oneof();
    set_has_characterselect();
    test_oneof_.characterselect_ = new ::com::nl::network::generated::NLCharacterSelect;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.characterSelect)
  return test_oneof_.characterselect_;
}
inline ::com::nl::network::generated::NLCharacterSelect* NetworkPocket::release_characterselect() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.characterSelect)
  if (has_characterselect()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLCharacterSelect* temp = test_oneof_.characterselect_;
    test_oneof_.characterselect_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_characterselect(::com::nl::network::generated::NLCharacterSelect* characterselect) {
  clear_test_oneof();
  if (characterselect) {
    set_has_characterselect();
    test_oneof_.characterselect_ = characterselect;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.characterSelect)
}

// .com.nl.network.generated.NLLoadLevel loadLevel = 6;
inline bool NetworkPocket::has_loadlevel() const {
  return test_oneof_case() == kLoadLevel;
}
inline void NetworkPocket::set_has_loadlevel() {
  _oneof_case_[0] = kLoadLevel;
}
inline void NetworkPocket::clear_loadlevel() {
  if (has_loadlevel()) {
    delete test_oneof_.loadlevel_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLLoadLevel& NetworkPocket::loadlevel() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.loadLevel)
  return has_loadlevel()
      ? *test_oneof_.loadlevel_
      : ::com::nl::network::generated::NLLoadLevel::default_instance();
}
inline ::com::nl::network::generated::NLLoadLevel* NetworkPocket::mutable_loadlevel() {
  if (!has_loadlevel()) {
    clear_test_oneof();
    set_has_loadlevel();
    test_oneof_.loadlevel_ = new ::com::nl::network::generated::NLLoadLevel;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.loadLevel)
  return test_oneof_.loadlevel_;
}
inline ::com::nl::network::generated::NLLoadLevel* NetworkPocket::release_loadlevel() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.loadLevel)
  if (has_loadlevel()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLLoadLevel* temp = test_oneof_.loadlevel_;
    test_oneof_.loadlevel_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_loadlevel(::com::nl::network::generated::NLLoadLevel* loadlevel) {
  clear_test_oneof();
  if (loadlevel) {
    set_has_loadlevel();
    test_oneof_.loadlevel_ = loadlevel;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.loadLevel)
}

// .com.nl.network.generated.NLLevelReady levelReady = 7;
inline bool NetworkPocket::has_levelready() const {
  return test_oneof_case() == kLevelReady;
}
inline void NetworkPocket::set_has_levelready() {
  _oneof_case_[0] = kLevelReady;
}
inline void NetworkPocket::clear_levelready() {
  if (has_levelready()) {
    delete test_oneof_.levelready_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLLevelReady& NetworkPocket::levelready() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.levelReady)
  return has_levelready()
      ? *test_oneof_.levelready_
      : ::com::nl::network::generated::NLLevelReady::default_instance();
}
inline ::com::nl::network::generated::NLLevelReady* NetworkPocket::mutable_levelready() {
  if (!has_levelready()) {
    clear_test_oneof();
    set_has_levelready();
    test_oneof_.levelready_ = new ::com::nl::network::generated::NLLevelReady;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.levelReady)
  return test_oneof_.levelready_;
}
inline ::com::nl::network::generated::NLLevelReady* NetworkPocket::release_levelready() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.levelReady)
  if (has_levelready()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLLevelReady* temp = test_oneof_.levelready_;
    test_oneof_.levelready_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_levelready(::com::nl::network::generated::NLLevelReady* levelready) {
  clear_test_oneof();
  if (levelready) {
    set_has_levelready();
    test_oneof_.levelready_ = levelready;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.levelReady)
}

// .com.nl.network.generated.NLFailed failed = 666;
inline bool NetworkPocket::has_failed() const {
  return test_oneof_case() == kFailed;
}
inline void NetworkPocket::set_has_failed() {
  _oneof_case_[0] = kFailed;
}
inline void NetworkPocket::clear_failed() {
  if (has_failed()) {
    delete test_oneof_.failed_;
    clear_has_test_oneof();
  }
}
inline  const ::com::nl::network::generated::NLFailed& NetworkPocket::failed() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NetworkPocket.failed)
  return has_failed()
      ? *test_oneof_.failed_
      : ::com::nl::network::generated::NLFailed::default_instance();
}
inline ::com::nl::network::generated::NLFailed* NetworkPocket::mutable_failed() {
  if (!has_failed()) {
    clear_test_oneof();
    set_has_failed();
    test_oneof_.failed_ = new ::com::nl::network::generated::NLFailed;
  }
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NetworkPocket.failed)
  return test_oneof_.failed_;
}
inline ::com::nl::network::generated::NLFailed* NetworkPocket::release_failed() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NetworkPocket.failed)
  if (has_failed()) {
    clear_has_test_oneof();
    ::com::nl::network::generated::NLFailed* temp = test_oneof_.failed_;
    test_oneof_.failed_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NetworkPocket::set_allocated_failed(::com::nl::network::generated::NLFailed* failed) {
  clear_test_oneof();
  if (failed) {
    set_has_failed();
    test_oneof_.failed_ = failed;
  }
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NetworkPocket.failed)
}

inline bool NetworkPocket::has_test_oneof() const {
  return test_oneof_case() != TEST_ONEOF_NOT_SET;
}
inline void NetworkPocket::clear_has_test_oneof() {
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}
inline NetworkPocket::TestOneofCase NetworkPocket::test_oneof_case() const {
  return NetworkPocket::TestOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// NLLogin

// string login = 1;
inline void NLLogin::clear_login() {
  login_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLLogin::login() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLLogin.login)
  return login_.GetNoArena();
}
inline void NLLogin::set_login(const ::std::string& value) {
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLLogin.login)
}
#if LANG_CXX11
inline void NLLogin::set_login(::std::string&& value) {
  
  login_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLLogin.login)
}
#endif
inline void NLLogin::set_login(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLLogin.login)
}
inline void NLLogin::set_login(const char* value, size_t size) {
  
  login_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLLogin.login)
}
inline ::std::string* NLLogin::mutable_login() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLLogin.login)
  return login_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLLogin::release_login() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLLogin.login)
  
  return login_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLLogin::set_allocated_login(::std::string* login) {
  if (login != NULL) {
    
  } else {
    
  }
  login_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLLogin.login)
}

// string password = 2;
inline void NLLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLLogin::password() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLLogin.password)
  return password_.GetNoArena();
}
inline void NLLogin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLLogin.password)
}
#if LANG_CXX11
inline void NLLogin::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLLogin.password)
}
#endif
inline void NLLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLLogin.password)
}
inline void NLLogin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLLogin.password)
}
inline ::std::string* NLLogin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLLogin::release_password() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLLogin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLLogin.password)
}

// -------------------------------------------------------------------

// NLPlayerInfo

// int64 id = 1;
inline void NLPlayerInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NLPlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLPlayerInfo.id)
  return id_;
}
inline void NLPlayerInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLPlayerInfo.id)
}

// repeated .com.nl.network.generated.NLCharacter charaters = 2;
inline int NLPlayerInfo::charaters_size() const {
  return charaters_.size();
}
inline void NLPlayerInfo::clear_charaters() {
  charaters_.Clear();
}
inline const ::com::nl::network::generated::NLCharacter& NLPlayerInfo::charaters(int index) const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLPlayerInfo.charaters)
  return charaters_.Get(index);
}
inline ::com::nl::network::generated::NLCharacter* NLPlayerInfo::mutable_charaters(int index) {
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLPlayerInfo.charaters)
  return charaters_.Mutable(index);
}
inline ::com::nl::network::generated::NLCharacter* NLPlayerInfo::add_charaters() {
  // @@protoc_insertion_point(field_add:com.nl.network.generated.NLPlayerInfo.charaters)
  return charaters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::nl::network::generated::NLCharacter >*
NLPlayerInfo::mutable_charaters() {
  // @@protoc_insertion_point(field_mutable_list:com.nl.network.generated.NLPlayerInfo.charaters)
  return &charaters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::nl::network::generated::NLCharacter >&
NLPlayerInfo::charaters() const {
  // @@protoc_insertion_point(field_list:com.nl.network.generated.NLPlayerInfo.charaters)
  return charaters_;
}

// -------------------------------------------------------------------

// NLCreateCharacter

// string name = 1;
inline void NLCreateCharacter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLCreateCharacter::name() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCreateCharacter.name)
  return name_.GetNoArena();
}
inline void NLCreateCharacter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCreateCharacter.name)
}
#if LANG_CXX11
inline void NLCreateCharacter::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLCreateCharacter.name)
}
#endif
inline void NLCreateCharacter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLCreateCharacter.name)
}
inline void NLCreateCharacter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLCreateCharacter.name)
}
inline ::std::string* NLCreateCharacter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLCreateCharacter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLCreateCharacter::release_name() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLCreateCharacter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLCreateCharacter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLCreateCharacter.name)
}

// .com.nl.network.generated.CharacterType type = 2;
inline void NLCreateCharacter::clear_type() {
  type_ = 0;
}
inline ::com::nl::network::generated::CharacterType NLCreateCharacter::type() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCreateCharacter.type)
  return static_cast< ::com::nl::network::generated::CharacterType >(type_);
}
inline void NLCreateCharacter::set_type(::com::nl::network::generated::CharacterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCreateCharacter.type)
}

// -------------------------------------------------------------------

// NLCharacter

// int64 id = 1;
inline void NLCharacter::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NLCharacter::id() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCharacter.id)
  return id_;
}
inline void NLCharacter::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCharacter.id)
}

// string name = 2;
inline void NLCharacter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLCharacter::name() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCharacter.name)
  return name_.GetNoArena();
}
inline void NLCharacter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCharacter.name)
}
#if LANG_CXX11
inline void NLCharacter::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLCharacter.name)
}
#endif
inline void NLCharacter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLCharacter.name)
}
inline void NLCharacter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLCharacter.name)
}
inline ::std::string* NLCharacter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLCharacter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLCharacter::release_name() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLCharacter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLCharacter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLCharacter.name)
}

// int32 level = 3;
inline void NLCharacter::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 NLCharacter::level() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCharacter.level)
  return level_;
}
inline void NLCharacter::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCharacter.level)
}

// .com.nl.network.generated.CharacterType type = 4;
inline void NLCharacter::clear_type() {
  type_ = 0;
}
inline ::com::nl::network::generated::CharacterType NLCharacter::type() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCharacter.type)
  return static_cast< ::com::nl::network::generated::CharacterType >(type_);
}
inline void NLCharacter::set_type(::com::nl::network::generated::CharacterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCharacter.type)
}

// -------------------------------------------------------------------

// NLCharacterSelect

// int64 id = 1;
inline void NLCharacterSelect::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NLCharacterSelect::id() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLCharacterSelect.id)
  return id_;
}
inline void NLCharacterSelect::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLCharacterSelect.id)
}

// -------------------------------------------------------------------

// NLLoadLevel

// string level = 1;
inline void NLLoadLevel::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLLoadLevel::level() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLLoadLevel.level)
  return level_.GetNoArena();
}
inline void NLLoadLevel::set_level(const ::std::string& value) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLLoadLevel.level)
}
#if LANG_CXX11
inline void NLLoadLevel::set_level(::std::string&& value) {
  
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLLoadLevel.level)
}
#endif
inline void NLLoadLevel::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLLoadLevel.level)
}
inline void NLLoadLevel::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLLoadLevel.level)
}
inline ::std::string* NLLoadLevel::mutable_level() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLLoadLevel.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLLoadLevel::release_level() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLLoadLevel.level)
  
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLLoadLevel::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLLoadLevel.level)
}

// -------------------------------------------------------------------

// NLLevelReady

// -------------------------------------------------------------------

// NLFailed

// string errorCode = 1;
inline void NLFailed::clear_errorcode() {
  errorcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLFailed::errorcode() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLFailed.errorCode)
  return errorcode_.GetNoArena();
}
inline void NLFailed::set_errorcode(const ::std::string& value) {
  
  errorcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLFailed.errorCode)
}
#if LANG_CXX11
inline void NLFailed::set_errorcode(::std::string&& value) {
  
  errorcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLFailed.errorCode)
}
#endif
inline void NLFailed::set_errorcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errorcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLFailed.errorCode)
}
inline void NLFailed::set_errorcode(const char* value, size_t size) {
  
  errorcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLFailed.errorCode)
}
inline ::std::string* NLFailed::mutable_errorcode() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLFailed.errorCode)
  return errorcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLFailed::release_errorcode() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLFailed.errorCode)
  
  return errorcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLFailed::set_allocated_errorcode(::std::string* errorcode) {
  if (errorcode != NULL) {
    
  } else {
    
  }
  errorcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errorcode);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLFailed.errorCode)
}

// string errordesc = 2;
inline void NLFailed::clear_errordesc() {
  errordesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NLFailed::errordesc() const {
  // @@protoc_insertion_point(field_get:com.nl.network.generated.NLFailed.errordesc)
  return errordesc_.GetNoArena();
}
inline void NLFailed::set_errordesc(const ::std::string& value) {
  
  errordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nl.network.generated.NLFailed.errordesc)
}
#if LANG_CXX11
inline void NLFailed::set_errordesc(::std::string&& value) {
  
  errordesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.nl.network.generated.NLFailed.errordesc)
}
#endif
inline void NLFailed::set_errordesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nl.network.generated.NLFailed.errordesc)
}
inline void NLFailed::set_errordesc(const char* value, size_t size) {
  
  errordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nl.network.generated.NLFailed.errordesc)
}
inline ::std::string* NLFailed::mutable_errordesc() {
  
  // @@protoc_insertion_point(field_mutable:com.nl.network.generated.NLFailed.errordesc)
  return errordesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NLFailed::release_errordesc() {
  // @@protoc_insertion_point(field_release:com.nl.network.generated.NLFailed.errordesc)
  
  return errordesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NLFailed::set_allocated_errordesc(::std::string* errordesc) {
  if (errordesc != NULL) {
    
  } else {
    
  }
  errordesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errordesc);
  // @@protoc_insertion_point(field_set_allocated:com.nl.network.generated.NLFailed.errordesc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace generated
}  // namespace network
}  // namespace nl
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::nl::network::generated::PocketType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::nl::network::generated::PocketType>() {
  return ::com::nl::network::generated::PocketType_descriptor();
}
template <> struct is_proto_enum< ::com::nl::network::generated::CharacterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::nl::network::generated::CharacterType>() {
  return ::com::nl::network::generated::CharacterType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pockets_2eproto__INCLUDED
